plugins {
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'java'
}

group = 'br.com.microservices.orchestrated'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	implementation 'io.opentelemetry.instrumentation:opentelemetry-kafka-clients-2.6:2.0.0-alpha'
	implementation 'io.opentelemetry.instrumentation:opentelemetry-spring-kafka-2.7:2.0.0-alpha'
	implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations:1.31.0'
	implementation 'io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter:2.0.0-alpha'
	implementation 'io.opentelemetry.instrumentation:opentelemetry-jdbc:2.0.0-alpha'
}
dependencyManagement {
	imports {
		mavenBom("io.opentelemetry:opentelemetry-bom:1.35.0")
		mavenBom("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha:2.1.0-alpha")
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
